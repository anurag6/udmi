{"version":3,"sources":["./src/app/components/no-origin/no-origin.component.ts","./src/app/components/no-origin/no-origin.component.html","./src/app/components/devices-overview/devices-overview.component.html","./src/app/components/devices-overview/devices-overview.component.ts","./src/app/enums.ts","./src/environments/environment.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.component.ts","./src/app/services/metrics.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/services/devices.service.ts","./src/app/app.module.ts","./src/app/services/origins.service.ts","./src/app/services/auth.service.ts","./src/app/components/system-state/system-state.component.ts","./src/app/components/system-state/system-state.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-origin',\n  templateUrl: './no-origin.component.html',\n  styleUrls: ['./no-origin.component.scss']\n})\nexport class NoOriginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <span>Please select an origin.</span>\n</div>","<app-no-origin *ngIf=\"!origin\"></app-no-origin>\n<div *ngIf=\"dataSource\">\n    <table mat-table [dataSource]=\"dataSource!\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"mac\">\n            <th mat-header-cell *matHeaderCellDef>MAC</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.mac}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"ip\">\n            <th mat-header-cell *matHeaderCellDef> IP </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.ip}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"port\">\n            <th mat-header-cell *matHeaderCellDef> Port </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.port}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"vlan\">\n            <th mat-header-cell *matHeaderCellDef> VLAN </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.vlan}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"role\">\n            <th mat-header-cell *matHeaderCellDef> Role </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.role}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter</td>\n        </tr>\n    </table>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Device, DeviceSearch, DevicesService } from '../../services/devices.service';\nimport { Origin, OriginsService } from '../../services/origins.service';\n\n@Component({\n  selector: 'app-devices-overview',\n  templateUrl: './devices-overview.component.html',\n  styleUrls: ['./devices-overview.component.scss']\n})\nexport class DevicesOverviewComponent implements OnInit, OnDestroy {\n\n  subscriptions: { [key: string]: Subscription } = {};\n  origin?: Origin;\n  pageSize = 30;\n  dataSource?: Observable<Device[]>;\n  displayColumns: string[] = ['mac', 'ip', 'port', 'vlan', 'role'];\n\n  constructor(private originService: OriginsService, private service: DevicesService) { }\n\n  ngOnInit(): void {\n    this.subscriptions.origin = this.originService.onOriginChange().subscribe((origin) => {\n      this.origin = origin;\n      this.getDevices(origin);\n    });\n  }\n\n  getDevices(origin: Origin, search?: DeviceSearch): void {\n    if (this.subscriptions.devices) {\n      this.subscriptions.devices.unsubscribe();\n    }\n    if (origin) {\n      this.dataSource = this.service.get(origin, this.pageSize, search);\n    }\n  }\n\n  ngOnDestroy(): void {\n    Object.values(this.subscriptions).forEach((subscription) => {\n      subscription.unsubscribe();\n    });\n  }\n}\n","export enum State {\n    unknown,\n    broken,\n    active,\n    damaged,\n    down,\n    healthy,\n    inactive,\n    initializing,\n    split,\n    up\n}\n\nexport enum SystemType {\n    DAQ = 'DAQ',\n    UDMS = 'UDMS'\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  useEmulators: true,\n  webapiurl: (window as any)[\"envconfig\"][\"apiurl\"] || \"default\",\n  firebase: {\n    apiKey: 'AIzaSyANL8VhKgHhD71lMNw6MUa_CRlpQs6Z0Pc',\n    authDomain: 'bos-daq-testing.firebaseapp.com',\n    databaseURL: 'https://bos-daq-testing.firebaseio.com',\n    projectId: 'bos-daq-testing',\n    storageBucket: 'bos-daq-testing.appspot.com',\n    messagingSenderId: '876218417738',\n    appId: '1:876218417738:web:8d28cdba7f56f6a9c9dcb3'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div *ngIf=\"authenticated | async as auth else loading\">\n    <button *ngIf=\"auth.authenticated\" mat-raised-button color=\"accent\" (click)=\"signOut()\">Sign Out</button>\n    <button *ngIf=\"!auth.authenticated\" mat-raised-button color=\"primary\" (click)=\"signIn()\">Sign In</button>\n</div>\n<ng-template #loading>\n    <mat-spinner></mat-spinner>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public authenticated!: Observable<{authenticated: boolean}>;\n\n  constructor(private service: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authenticated = this.service.isAuthenticated();\n  }\n\n  public signIn(): void {\n    this.service.signIn().subscribe((user) => {\n      this.router.navigate(['/dashboard']);\n    });\n  }\n\n  public signOut(): void {\n    this.service.signOut();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { State } from '../enums';\nimport { Origin } from './origins.service';\n\nexport interface Metric {\n  timestamp: Date;\n  state: State;\n  detail: string;\n  lastChanged?: Date;\n  changeCount?: number;\n}\n\nexport interface SystemMetric extends Metric {\n  controller?: Metric;\n  egress?: Metric;\n  processes?: Metric;\n  dataPlane?: Metric;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetricsService {\n\n  constructor(private firestore: AngularFirestore) { }\n\n  private mapMetric(metric: any): Metric | undefined {\n    if (!metric) {\n      return;\n    }\n    const timestamp = metric.last_updated && metric.last_updated.toDate();\n    const lastChanged = metric.last_changed && metric.last_changed.toDate();\n    return {\n      state: State[metric.state as keyof typeof State],\n      detail: metric.detail,\n      changeCount: metric.change_count,\n      lastChanged,\n      timestamp: timestamp || lastChanged\n    };\n  }\n\n  private mapSystemMetric(metric: any): SystemMetric {\n    const systemMetric = this.mapMetric(metric);\n    return Object.assign(systemMetric, {\n      controller: this.mapMetric(metric.controller),\n      egress: this.mapMetric(metric.egress),\n      processes: this.mapMetric(metric.processes),\n      dataPlane: this.mapMetric(metric.dataplane)\n    });\n  }\n\n  public getLatest(origin: Origin): Observable<SystemMetric> {\n    return this.firestore.collection('origin').doc(origin.id)\n      .collection('system', ref => ref.orderBy('last_updated', 'desc').limit(1))\n      .valueChanges().pipe(\n        filter((docs) => {\n          return !!docs.length;\n        }),\n        map((metrics) => {\n          return this.mapSystemMetric(metrics[0]);\n        }));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService, User } from './services/auth.service';\nimport { Origin, OriginsService } from './services/origins.service';\nimport { environment  } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  public title = 'UDMS';\n  public webapiurl = environment.webapiurl;\n  public origins!: Observable<Origin[]>;\n  public user!: Observable<User | undefined>;\n  public selectedOrigin?: Origin;\n\n  constructor(private originsService: OriginsService, private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.user = this.auth.getUser();\n    this.origins = this.originsService.getOrigins().pipe(map((origins) => {\n      if (this.selectedOrigin || !origins.length) {\n        return origins;\n      }\n      this.changeOrigin(origins[0]); // Defaults to first origin\n      return origins;\n    }));\n  }\n\n  public changeOrigin(origin: Origin): void {\n    this.selectedOrigin = origin;\n    this.originsService.changeOrigin(origin);\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-icon-button>\n        <mat-icon>menu</mat-icon>\n    </button>\n    <span routerLink=\"/dashboard\" class=\"title\">{{title}}</span>\n    <span class=\"spacer\"></span>\n    <span>webapiurl : {{ webapiurl  }}</span>\n    <span *ngIf=\"user | async as user\">\n        <button mat-button [matMenuTriggerFor]=\"userMenu\">\n            {{user.name}}\n        </button>\n        <mat-menu #userMenu=\"matMenu\">\n            <button mat-menu-item routerLink=\"/login\">Sign Out</button>\n        </mat-menu>\n        <button mat-button [matMenuTriggerFor]=\"menu\">\n            {{selectedOrigin ? selectedOrigin.id : \"Choose Origin\"}}\n            <mat-icon>keyboard_arrow_down</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <span *ngIf=\"origins | async as origins\">\n                <button mat-menu-item *ngFor=\"let origin of origins\"\n                    (click)=\"changeOrigin(origin)\">{{origin.id}}</button>\n                <span mat-menu-item *ngIf=\"!origins.length\">No Origins Available\n                </span>\n            </span>\n        </mat-menu>\n    </span>\n</mat-toolbar>\n<div class=\"wrapper\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n  title = 'udms';\n}\n","<app-system-state></app-system-state>\n<app-devices-overview></app-devices-overview>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, QueryFn } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Origin } from './origins.service';\n\nexport interface Device {\n  mac: string;\n  ip: string;\n  port: number;\n  vlan: number;\n  role: string;\n}\n\nexport interface DeviceSearch {\n  mac?: string;\n  ip?: string;\n  port?: number;\n  vlan?: number;\n  role?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DevicesService {\n\n  constructor(private firestore: AngularFirestore) { }\n\n  private mapDevice(device: any): Device {\n    return {\n      mac: device.attributes.mac,\n      ip: device.attributes.ip,\n      port: device.attributes.port,\n      vlan: device.attributes.vlan,\n      role: device.attributes.role\n    };\n  }\n\n  public get(origin: Origin, count: number, search?: DeviceSearch): Observable<Device[]> {\n    const queryFn: QueryFn = ref => {\n      let query = ref.limit(count);\n      if (search && Object.keys(search).length) {\n        Object.keys(search).forEach((key) => {\n          const value = search[key as keyof DeviceSearch];\n          query = query.where(key, '==', value);\n        });\n      }\n      return query;\n    };\n\n    return this.firestore.collection('origin').doc(origin.id)\n      .collection('devices', queryFn)\n      .valueChanges().pipe(\n        map((devices) => devices.map(this.mapDevice)));\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { USE_EMULATOR as USE_AUTH_EMULATOR } from '@angular/fire/auth';\nimport { AngularFirestoreModule, USE_EMULATOR as USE_FIRESTORE_EMULATOR } from '@angular/fire/firestore';\nimport { USE_EMULATOR as USE_FUNCTIONS_EMULATOR } from '@angular/fire/functions';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SystemStateComponent } from './components/system-state/system-state.component';\nimport { NoOriginComponent } from './components/no-origin/no-origin.component';\nimport { DevicesOverviewComponent } from './components/devices-overview/devices-overview.component';\n\nimport { environment } from 'src/environments/environment';\n\nimport { MetricsService } from './services/metrics.service';\nimport { OriginsService } from './services/origins.service';\nimport { AuthService } from './services/auth.service';\nimport { DevicesService } from './services/devices.service';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\n// Emulator workaround. There's a bug in emulator auth.\nconst app = firebase.initializeApp(environment.firebase);\nif (environment.useEmulators) {\n  app.auth().useEmulator('http://localhost:9099');\n  app.firestore().useEmulator('localhost', 8080);\n  app.functions().useEmulator('localhost', 5001);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LoginComponent,\n    SystemStateComponent,\n    NoOriginComponent,\n    DevicesOverviewComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatTableModule,\n    MatFormFieldModule\n  ],\n  providers: [\n    { provide: USE_AUTH_EMULATOR, useValue: environment.useEmulators ? ['localhost', 9099] : undefined },\n    { provide: USE_FIRESTORE_EMULATOR, useValue: environment.useEmulators ? ['localhost', 8080] : undefined },\n    { provide: USE_FUNCTIONS_EMULATOR, useValue: environment.useEmulators ? ['localhost', 5001] : undefined },\n    MetricsService,\n    OriginsService,\n    AuthService,\n    DevicesService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, Subscriber } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SystemType } from '../enums';\n\nexport interface Origin {\n  type: SystemType;\n  id: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OriginsService {\n  private changeListeners: Subscriber<Origin>[] = [];\n  private currentOrigin?: Origin;\n\n  constructor(private firestore: AngularFirestore) { }\n\n  public getOrigins(): Observable<Origin[]> {\n    return this.firestore.collection('origin').valueChanges({ idField: 'id' }).pipe(map((docs) => {\n      return docs.map((doc: any) => {\n        return {\n          type: doc.type as SystemType,\n          id: doc.id\n        };\n      });\n    }));\n  }\n\n  public changeOrigin(origin: Origin): void {\n    if (this.currentOrigin === origin) {\n      return;\n    }\n    this.currentOrigin = origin;\n    this.changeListeners = this.changeListeners.filter((subscriber) => !subscriber.closed)\n      .map((subscriber) => {\n        subscriber.next(origin);\n        return subscriber;\n      });\n  }\n\n  public onOriginChange(): Observable<Origin> {\n    return new Observable<Origin>((subscriber) => {\n      this.changeListeners.push(subscriber);\n      subscriber.next(this.currentOrigin);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface User {\n  id: string;\n  name?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private service: AngularFireAuth) { }\n\n  public isAuthenticated(): Observable<{ authenticated: boolean }> {\n    return this.getUser().pipe(map((user) => {\n      return { authenticated: !!user };\n    }));\n  }\n\n  public getUser(): Observable<User | undefined> {\n    return this.service.user.pipe(map((user) => {\n      if (!user) {\n        return undefined;\n      }\n      return {\n        id: user.uid,\n        name: user.displayName || user.uid\n      };\n    }));\n  }\n\n  public signIn(): Observable<firebase.auth.UserCredential> {\n    return from(this.service.signInWithPopup(new firebase.auth.GoogleAuthProvider()));\n  }\n\n  public signOut(): Observable<void> {\n    return from(this.service.signOut());\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { State } from '../../enums';\nimport { Metric, MetricsService, SystemMetric } from '../../services/metrics.service';\nimport { Origin, OriginsService } from '../../services/origins.service';\n\n@Component({\n  selector: 'app-system-state',\n  templateUrl: './system-state.component.html',\n  styleUrls: ['./system-state.component.scss']\n})\nexport class SystemStateComponent implements OnInit, OnDestroy {\n  stateColorMap = new Map<State, string>([\n    [State.unknown, '#DCDCDE'],\n    [State.initializing, '#DCDCDE'],\n    [State.broken, '#ED553B'],\n    [State.healthy, '#00A32A'],\n    [State.damaged, '#F0C33C'],\n    [State.split, '#F0C33C'],\n    [State.up, '#00A32A'],\n    [State.down, '#ED553B'],\n    [State.active, '#00A32A'],\n    [State.inactive, '#C3C4C7']\n  ]);\n  origin?: Origin;\n  data: { name: string, value: number }[] = [];\n  dataColor: { domain: string[] } = { domain: [] };\n  latest?: SystemMetric;\n  systemState?: string;\n  selectedMetric?: { type: string, metric: Metric };\n  subscriptions: { [key: string]: Subscription } = {};\n\n  constructor(private originService: OriginsService, private metricsService: MetricsService) { }\n\n  ngOnInit(): void {\n    this.subscriptions.origin = this.originService.onOriginChange().subscribe((origin) => {\n      this.origin = origin;\n      this.getSystemMetric(origin);\n    });\n    this.formatTooltip = this.formatTooltip.bind(this);\n    this.onSelectMetric = this.onSelectMetric.bind(this);\n  }\n\n  formatTooltip(e: { data: { label: string } }): string {\n    const subSystem = this.latest && this.latest[e.data.label as keyof SystemMetric] as Metric;\n    return e.data.label + ': ' + (subSystem ? State[subSystem.state] : 'Unknown');\n  }\n\n  formatSystemMetric(metric: SystemMetric): void {\n    this.data = [];\n    this.dataColor.domain = [];\n    this.systemState = State[metric.state];\n    ['controller', 'egress', 'processes', 'dataPlane'].forEach((type) => {\n      const keyType = type as keyof SystemMetric;\n      this.data.push({\n        name: type,\n        value: 1\n      });\n      const subMetric = metric[keyType] as Metric;\n      if (subMetric && this.stateColorMap.has(subMetric.state)) {\n        const color = this.stateColorMap.get(subMetric.state) as string;\n        this.dataColor.domain.push(color);\n      } else {\n        this.dataColor.domain.push('#00131C');\n      }\n    });\n  }\n\n  onSelectMetric(e: { label: string }): void {\n    const metric = this.latest && this.latest[e.label as keyof SystemMetric] as Metric;\n    if (metric) {\n      this.selectedMetric = { type: e.label, metric };\n    }\n  }\n\n  unSelectedMetric(): void {\n    delete this.selectedMetric;\n  }\n\n  getSystemMetric(origin: Origin): void {\n    if (this.subscriptions.systemMetric) {\n      this.subscriptions.systemMetric.unsubscribe();\n    }\n    if (origin) {\n      this.subscriptions.systemMetric = this.metricsService.getLatest(origin).subscribe((metric) => {\n        this.latest = metric;\n        this.formatSystemMetric(metric);\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    Object.values(this.subscriptions).forEach((subscription) => {\n      subscription.unsubscribe();\n    });\n  }\n\n}\n","<div *ngIf=\"origin else noOrigin\" class=\"chart-wrapper\">\n    <ngx-charts-pie-chart [doughnut]=\"true\" [scheme]=\"dataColor\" [results]=\"data\" [legend]=\"false\" [legend]=\"false\"\n        [labels]=\"false\" [tooltipText]=\"formatTooltip\" (select)=\"onSelectMetric($event)\">\n    </ngx-charts-pie-chart>\n    <span class=\"system-text\">{{ (systemState ? \"System \" + systemState : \"Unknown State\") | titlecase }}</span>\n</div>\n<mat-card *ngIf=\"selectedMetric\">\n    <mat-card-header>\n        <mat-card-title>\n            {{selectedMetric.type | titlecase}}\n        </mat-card-title>\n        <mat-card-subtitle>\n            Updated: {{selectedMetric.metric.timestamp | date: \"short\"}}\n        </mat-card-subtitle>\n        <div class=\"close-icon\">\n            <mat-icon (click)=\"unSelectedMetric()\">close</mat-icon>\n        </div>\n    </mat-card-header>\n    <mat-card-content>\n        <div *ngIf=\"selectedMetric.metric.detail\">\n            Detail: {{selectedMetric.metric.detail}}\n        </div>\n        <div *ngIf=\"selectedMetric.metric.lastChanged\">\n            Last Changed: {{selectedMetric.metric.lastChanged | date:\n            \"short\"}}\n        </div>\n        <div *ngIf=\"selectedMetric.metric.changeCount !== undefined\">\n            Change Count: {{selectedMetric.metric.changeCount}}\n        </div>\n    </mat-card-content>\n</mat-card>\n<ng-template #noOrigin>\n    <app-no-origin></app-no-origin>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AngularFireAuthGuard, redirectUnauthorizedTo, redirectLoggedInTo } from '@angular/fire/auth-guard';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { LoginComponent } from './pages/login/login.component';\n\nconst redirectToLogin: () => void = () => redirectUnauthorizedTo(['login']);\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AngularFireAuthGuard], data: { authGuardPipe: redirectToLogin } }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}